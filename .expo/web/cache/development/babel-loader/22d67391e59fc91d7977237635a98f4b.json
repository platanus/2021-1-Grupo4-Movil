{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  logged: false\n};\n\nvar loginReducer = function loginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      newState.logged = true;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/home/manuel/Desktop/2021-1-Grupo4-Movil/store/reducers/reducer.js"],"names":["initialState","logged","loginReducer","state","action","newState","type"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;;AAKE,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAiC;AAAA,MAAhCC,KAAgC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAClD,MAAMC,QAAQ,qBAAQF,KAAR,CAAd;;AACA,UAAQC,MAAM,CAACE,IAAf;AACM,SAAK,eAAL;AACID,MAAAA,QAAQ,CAACJ,MAAT,GAAkB,IAAlB;AACA,aAAOI,QAAP;;AACR;AACE,aAAOF,KAAP;AALJ;AAOD,CATH;;AAWE,eAAeD,YAAf","sourcesContent":["const initialState = {\n    logged: false,\n    \n  }\n  \n  const loginReducer = (state= initialState, action) => {\n      const newState = { ...state};\n      switch (action.type) {\n            case 'LOGIN_SUCCESS':\n                newState.logged = true;\n                return newState;\n        default:\n          return state;\n      }\n    };\n    \n    export default loginReducer;"]},"metadata":{},"sourceType":"module"}