{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/manuel/Desktop/2021-1-Grupo4-Movil/screens/SignUpScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { signUpUserAction } from \"../store/actions/logInActions\";\nimport { connect } from \"react-redux\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loggedIn: state.logged,\n    signUpError: state.signUpError\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signUpUser: function signUpUser(data) {\n      return dispatch(signUpUserAction(data));\n    }\n  };\n};\n\nfunction connectedSignUp(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password2 = _useState6[0],\n      setPassword2 = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  useEffect(function () {\n    if (props.signUpError) {\n      var message = props.loginError;\n\n      if (message === \"invalid_attributes\") {\n        setErrorMessage(\"Try again: This user does not exists\");\n      } else {\n        setErrorMessage(\"Try again: Invalid email or password\");\n      }\n    }\n  }, [props.signUpError]);\n\n  function handleSignUp() {\n    props.signUpUser({\n      user: user,\n      password: password\n    });\n  }\n\n  if (props.loggedIn) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"hola estas loggeado\"));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.helloText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Hello KitchenGram!\"), React.createElement(View, {\n      style: styles.logContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.loginText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \" Mail:\"), React.createElement(TextInput, {\n      onChangeText: function onChangeText(mail) {\n        return setUser(mail);\n      },\n      style: styles.input,\n      autoCapitalize: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: styles.loginText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \" Password:\"), React.createElement(TextInput, {\n      onChangeText: function onChangeText(password) {\n        return setPassword(password);\n      },\n      secureTextEntry: true,\n      style: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }), React.createElement(Text, {\n      style: styles.loginText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \" Confirm Password:\"), React.createElement(TextInput, {\n      onChangeText: function onChangeText(password) {\n        return setPassword2(password);\n      },\n      secureTextEntry: true,\n      style: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }), React.createElement(Text, {\n      style: {\n        textAlign: \"center\",\n        color: \"#074eec\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, errorMessage), React.createElement(TouchableOpacity, {\n      onPress: handleSignUp,\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Sign Up\")), React.createElement(TouchableOpacity, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\",\n        color: \"#074eec\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Do you have an account? Log in!\"))), React.createElement(StatusBar, {\n      style: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }));\n  }\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"#074eec\",\n    padding: 12,\n    borderRadius: 5,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: \"30%\"\n  },\n  helloText: {\n    marginTop: 0,\n    fontSize: 24,\n    color: \"#074eec\",\n    fontWeight: \"bold\",\n    marginBottom: \"20%\"\n  },\n  input: {\n    height: 40,\n    margin: 5,\n    borderWidth: 2,\n    borderColor: \"#074eec\",\n    maxWidth: \"100%\",\n    marginLeft: 3,\n    borderRadius: 5,\n    paddingHorizontal: 10\n  },\n  logContainer: {\n    width: \"70%\",\n    backgroundColor: '#fff'\n  },\n  loginText: {\n    fontSize: 18,\n    color: \"#074eec\"\n  }\n});\nvar SignUp = connect(mapStateToProps, mapDispatchToProps)(connectedSignUp);\nexport default SignUp;","map":{"version":3,"sources":["/home/manuel/Desktop/2021-1-Grupo4-Movil/screens/SignUpScreen.js"],"names":["React","useState","useEffect","StatusBar","signUpUserAction","connect","mapStateToProps","state","loggedIn","logged","signUpError","mapDispatchToProps","dispatch","signUpUser","data","connectedSignUp","props","user","setUser","password","setPassword","password2","setPassword2","errorMessage","setErrorMessage","message","loginError","handleSignUp","styles","container","helloText","logContainer","loginText","mail","input","textAlign","color","button","buttonText","StyleSheet","create","backgroundColor","padding","borderRadius","width","alignItems","justifyContent","marginTop","fontWeight","flex","paddingTop","fontSize","marginBottom","height","margin","borderWidth","borderColor","maxWidth","marginLeft","paddingHorizontal","SignUp"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View , TextInput, TouchableOpacity, Alert} from 'react-native';\nimport {signUpUserAction} from \"../store/actions/logInActions\";\nimport {connect} from \"react-redux\"\n\nconst mapStateToProps = (state) => ({\n    loggedIn: state.logged,\n    signUpError: state.signUpError});\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUpUser: (data) => dispatch(signUpUserAction(data))});\n\n\n\nfunction connectedSignUp(props) {\n\n    const [user, setUser] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    useEffect(() => {\n      if (props.signUpError) {\n        const message = props.loginError;\n        if(message === \"invalid_attributes\") {\n          setErrorMessage(\"Try again: This user does not exists\");\n        }\n        else{\n          setErrorMessage(\"Try again: Invalid email or password\");\n        }   \n      } \n    }, [props.signUpError])\n\n    function handleSignUp() {\n     // verificar que contraseñas sean iguales\n      props.signUpUser({user: user, password: password});\n    }\n\n    if (props.loggedIn) {\n      return(\n      <View>\n        <Text>hola estas loggeado</Text>\n      </View>)\n      \n    } else {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.helloText}>Hello KitchenGram!</Text>\n          <View style={styles.logContainer}>\n          <Text style={styles.loginText}> Mail:</Text>\n          <TextInput\n          onChangeText={(mail) => setUser(mail)}\n          style={styles.input}\n          autoCapitalize=\"none\"/>\n          <Text style={styles.loginText}> Password:</Text>\n           <TextInput  \n            onChangeText={(password) => setPassword(password)}\n            secureTextEntry={true}\n            style={styles.input}\n          />\n        <Text style={styles.loginText}> Confirm Password:</Text>\n           <TextInput  \n            onChangeText={(password) => setPassword2(password)}\n            secureTextEntry={true}\n            style={styles.input}\n          />\n          <Text style={{textAlign: \"center\", color:\"#074eec\"}}>\n            {errorMessage}\n          </Text>\n           <TouchableOpacity\n            onPress={handleSignUp} \n            style={styles.button}>\n            <Text style={styles.buttonText}>Sign Up</Text>\n          </TouchableOpacity>\n          <TouchableOpacity>\n            <Text style={{textAlign: \"center\", color:\"#074eec\"}}>\n              Do you have an account? Log in!\n            </Text>\n          </TouchableOpacity>\n          </View>\n         \n          <StatusBar style=\"auto\" />\n        </View>\n        )\n      \n    }\n    \n}\n\nconst styles = StyleSheet.create({\n    button: { \n    backgroundColor: \"#074eec\",\n    padding: 12,\n    borderRadius: 5,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center', \n    marginTop: 10,},\n  \n    buttonText: { \n    color: 'white',\n    fontWeight: 'bold',\n    },\n  \n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      // justifyContent: 'center',\n      paddingTop: \"30%\",\n    },\n    helloText:{\n      marginTop: 0,\n      fontSize: 24,\n      color: \"#074eec\",\n      fontWeight: \"bold\",\n      marginBottom: \"20%\",\n  \n    },\n    input:{\n      height: 40,\n      margin: 5,\n      borderWidth: 2,\n      borderColor: \"#074eec\",\n      maxWidth: \"100%\",\n      marginLeft: 3,\n      borderRadius: 5,\n      paddingHorizontal:10,\n      \n    },\n    logContainer: {\n      width: \"70%\",\n      backgroundColor: '#fff',\n      // alignItems: 'center',\n      // justifyContent: 'flex-start',\n    },\n    loginText:{\n      fontSize: 18,\n      color: \"#074eec\",\n    },\n   \n  });\n\nconst SignUp = connect(mapStateToProps, mapDispatchToProps,)(connectedSignUp);\n\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}