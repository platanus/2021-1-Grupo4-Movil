{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/manuel/Desktop/2021-1-Grupo4-Movil/screens/LogInScreen.js\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { loginUserAction } from \"../store/actions/logInActions\";\nimport { connect } from \"react-redux\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loggedIn: state.logged,\n    loginError: state.loginError\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginUser: function loginUser(data) {\n      return dispatch(loginUserAction(data));\n    }\n  };\n};\n\nfunction connectedLogIn(props) {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function handleLogin() {\n    props.loginUser({\n      user: user,\n      password: password\n    });\n  }\n\n  var createLoginErrorAlert = function createLoginErrorAlert() {\n    if (props.loginError) {\n      var message = props.loginError;\n\n      if (message === \"record_not_found\") {\n        var _messageText = \"This user does not exists\";\n      } else {\n        var _messageText2 = \"Invalid email or password\";\n      }\n\n      return React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          color: \"#074eec\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Try again: \", messageText);\n    } else {\n      return React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          color: \"#074eec\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  if (props.loggedIn) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"hola estas loggeado\"));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.helloText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Hello KitchenGram!\"), React.createElement(View, {\n      style: styles.logContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.loginText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \" Mail:\"), React.createElement(TextInput, {\n      onChangeText: function onChangeText(mail) {\n        return setUser(mail);\n      },\n      style: styles.input,\n      autoCapitalize: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: styles.loginText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \" Password:\"), React.createElement(TextInput, {\n      onChangeText: function onChangeText(password) {\n        return setPassword(password);\n      },\n      secureTextEntry: true,\n      style: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }), createLoginErrorAlert(), React.createElement(TouchableOpacity, {\n      onPress: handleLogin,\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Log In\"))), React.createElement(StatusBar, {\n      style: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }));\n  }\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"#074eec\",\n    padding: 12,\n    borderRadius: 5,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: \"30%\"\n  },\n  helloText: {\n    marginTop: 0,\n    fontSize: 24,\n    color: \"#074eec\",\n    fontWeight: \"bold\",\n    marginBottom: \"20%\"\n  },\n  input: {\n    height: 40,\n    margin: 5,\n    borderWidth: 2,\n    borderColor: \"#074eec\",\n    maxWidth: \"100%\",\n    marginLeft: 3,\n    borderRadius: 5,\n    paddingHorizontal: 10\n  },\n  logContainer: {\n    width: \"70%\",\n    backgroundColor: '#fff'\n  },\n  loginText: {\n    fontSize: 18,\n    color: \"#074eec\"\n  }\n});\nvar logIn = connect(mapStateToProps, mapDispatchToProps)(connectedLogIn);\nexport default logIn;","map":{"version":3,"sources":["/home/manuel/Desktop/2021-1-Grupo4-Movil/screens/LogInScreen.js"],"names":["React","useState","StatusBar","loginUserAction","connect","mapStateToProps","state","loggedIn","logged","loginError","mapDispatchToProps","dispatch","loginUser","data","connectedLogIn","props","user","setUser","password","setPassword","handleLogin","createLoginErrorAlert","message","messageText","textAlign","color","styles","container","helloText","logContainer","loginText","mail","input","button","buttonText","StyleSheet","create","backgroundColor","padding","borderRadius","width","alignItems","justifyContent","marginTop","fontWeight","flex","paddingTop","fontSize","marginBottom","height","margin","borderWidth","borderColor","maxWidth","marginLeft","paddingHorizontal","logIn"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View , TextInput, TouchableOpacity, Alert} from 'react-native';\nimport {loginUserAction} from \"../store/actions/logInActions\";\nimport {connect} from \"react-redux\"\n\nconst mapStateToProps = (state) => ({\n    loggedIn: state.logged,\n    loginError: state.loginError});\n\nconst mapDispatchToProps = (dispatch) => ({\n    loginUser: (data) => dispatch(loginUserAction(data))});\n\n\n\nfunction connectedLogIn(props) {\n\n    const [user, setUser] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    \n\n    function handleLogin() {\n      props.loginUser({user: user, password: password});\n      \n    }\n    \n    const createLoginErrorAlert = () => {\n      if (props.loginError) {\n        const message = props.loginError\n\n        if(message === \"record_not_found\") {\n          const messageText = \"This user does not exists\";\n        }\n        else {\n          const messageText = \"Invalid email or password\";\n        }\n        return(\n          <Text style={{textAlign: \"center\", color:\"#074eec\"}}>\n              Try again: {messageText}\n          </Text>\n          )\n\n    } else {\n       return(\n        <Text style={{textAlign: \"center\", color:\"#074eec\"}}>\n          \n        </Text>\n        )\n      \n    }\n  }\n    \n\n    if (props.loggedIn) {\n      return(\n      <View>\n        <Text>hola estas loggeado</Text>\n      </View>)\n      \n    } else {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.helloText}>Hello KitchenGram!</Text>\n          <View style={styles.logContainer}>\n          <Text style={styles.loginText}> Mail:</Text>\n          <TextInput\n          onChangeText={(mail) => setUser(mail)}\n          style={styles.input}\n          autoCapitalize=\"none\"/>\n          <Text style={styles.loginText}> Password:</Text>\n           <TextInput  \n            onChangeText={(password) => setPassword(password)}\n            secureTextEntry={true}\n            style={styles.input}\n          />\n           {createLoginErrorAlert()}\n           <TouchableOpacity\n            onPress={handleLogin} \n            style={styles.button}>\n            <Text style={styles.buttonText}>Log In</Text>\n          </TouchableOpacity>\n          </View>\n         \n          <StatusBar style=\"auto\" />\n        </View>\n        )\n      \n    }\n    \n}\n\nconst styles = StyleSheet.create({\n    button: { \n    backgroundColor: \"#074eec\",\n    padding: 12,\n    borderRadius: 5,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center', \n    marginTop: 10,},\n  \n    buttonText: { \n    color: 'white',\n    fontWeight: 'bold',\n    },\n  \n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      // justifyContent: 'center',\n      paddingTop: \"30%\",\n    },\n    helloText:{\n      marginTop: 0,\n      fontSize: 24,\n      color: \"#074eec\",\n      fontWeight: \"bold\",\n      marginBottom: \"20%\",\n  \n    },\n    input:{\n      height: 40,\n      margin: 5,\n      borderWidth: 2,\n      borderColor: \"#074eec\",\n      maxWidth: \"100%\",\n      marginLeft: 3,\n      borderRadius: 5,\n      paddingHorizontal:10,\n      \n    },\n    logContainer: {\n      width: \"70%\",\n      backgroundColor: '#fff',\n      // alignItems: 'center',\n      // justifyContent: 'flex-start',\n    },\n    loginText:{\n      fontSize: 18,\n      color: \"#074eec\",\n    },\n   \n  });\n\nconst logIn = connect(mapStateToProps, mapDispatchToProps,)(connectedLogIn);\n\n\nexport default logIn\n"]},"metadata":{},"sourceType":"module"}